require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game).caption("Made by Anzor5458",true)
game.ReplicatedStorage.GameData.LatestRoom.Changed:Wait()
wait(1)
require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game).caption("very hard mode",true)
wait(3)
require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game).caption("l'm gay",true)

-- release screech

game.ReplicatedStorage.Entities.Screech.Top.Eyes.Color = Color3.fromRGB(255, 255, 0)
game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.Screech.Caught.SoundId = "rbxassetid://7492033495"
game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.Screech.Caught.PlaybackSpeed = 1.6
game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.Screech.Attack.SoundId = "rbxassetid://8080941676"

if game:GetService("ReplicatedStorage").GameData.Floor.Value == "Fools" then

game.ReplicatedStorage.Entities.Screech.Top.Eyes.Color = Color3.fromRGB(255, 255, 0)
game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.Screech.Attack.SoundId = "rbxassetid://8080941676"

--[[ ]]--

end

-- timothy new jumpscare sound

game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.SpiderJumpscare.Scare.SoundId = "rbxassetid://8080941676"

-- hide monster release scare

game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.HideMonster.Scare.SoundId = "rbxassetid://9126213741"

-- goofy darkness

game.Workspace.Ambience_Dark.SoundId = "rbxassetid://6535784827"
game.Workspace.Ambience_Dark.PlaybackSpeed = 1

-- WOW

game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.Health.Death.SoundId = "rbxassetid://16929745437", "DeathNew"
game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.Health.Death.PlaybackSpeed = 4, "DeathNew"

game.TextChatService.TextChannels.RBXSystem:DisplaySystemMessage("Ok, it's works now, you can finally open the door!")

-- galena 
coroutine.wrap(function()
    while true do
        wait(math.random(30,80))
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Wait()
        wait(5)
local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

---====== Create entity ======---

local entity = spawner.Create({
	Entity = {
		Name = "galena",
		Asset = "https://github.com/Anzor5458/Galens/raw/refs/heads/main/Galena.rbxm",
		HeightOffset = 0
	},
	Lights = {
		Flicker = {
			Enabled = true,
			Duration = 1
		},
		Shatter = true,
		Repair = false
	},
	Earthquake = {
		Enabled = true
	},
	CameraShake = {
		Enabled = true,
		Range = 100,
		Values = {1.5, 20, 0.1, 1} -- Magnitude, Roughness, FadeIn, FadeOut
	},
	Movement = {
		Speed = 100,
		Delay = 2,
		Reversed = false
	},
	Rebounding = {
		Enabled = true,
		Type = "Ambush", -- "Blitz"
		Min = 1,
		Max = 1,
		Delay = 2
	},
	Damage = {
		Enabled = true,
		Range = 40,
		Amount = 125
	},
	Crucifixion = {
		Enabled = true,
		Range = 40,
		Resist = false,
		Break = true
	},
	Death = {
		Type = "Guiding", -- "Curious"
		Hints = {"Death", "Hints", "Go", "Here"},
		Cause = ""
	}
})

---====== Debug entity ======---

entity:SetCallback("OnSpawned", function()
    print("Entity has spawned")
end)

entity:SetCallback("OnStartMoving", function()
    print("Entity has started moving")
end)

entity:SetCallback("OnEnterRoom", function(room, firstTime)
    if firstTime == true then
        print("Entity has entered room: ".. room.Name.. " for the first time")
    else
        print("Entity has entered room: ".. room.Name.. " again")
    end
end)

entity:SetCallback("OnLookAt", function(lineOfSight)
	if lineOfSight == true then
		print("Player is looking at entity")
	else
		print("Player view is obstructed by something")
	end
end)

entity:SetCallback("OnRebounding", function(startOfRebound)
    if startOfRebound == true then
        print("Entity has started rebounding")
	else
        print("Entity has finished rebounding")
	end
end)

entity:SetCallback("OnDespawning", function()
    print("Entity is despawning")
end)

entity:SetCallback("OnDespawned", function()
    print("Entity has despawned")
end)

entity:SetCallback("OnDamagePlayer", function(newHealth)
	if newHealth == 0 then
		print("Entity has killed the player")
	else
		print("Entity has damaged the player")
	end
end)

--[[

DEVELOPER NOTE:
By overwriting 'CrucifixionOverwrite' the default crucifixion callback will be replaced with your custom callback.

entity:SetCallback("CrucifixionOverwrite", function()
    print("Custom crucifixion callback")
end)

]]--

---====== Run entity ======---

entity:Run()
    end
end)()

-- eyes nightmare in one room
 
coroutine.wrap(function()
 
game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
 
    wait(1)

game.Players.LocalPlayer.PlayerGui.MainUI.Jumpscare.Jumpscare_Eyes.BackgroundColor3 = Color3.fromRGB(255, 0, 55)
 
    if game.Workspace:FindFirstChild("Eyes") then
 
game.Workspace.Eyes.Core.Attachment.EyesParticle.Color = ColorSequence.new({
 
            ColorSequenceKeypoint.new(0, Color3.new(1, 0.305881, 0.305881)),
 
            ColorSequenceKeypoint.new(0.305881, Color3.new(1, 0.305881, 0.305881)),
 
            ColorSequenceKeypoint.new(0.305881, Color3.new(1, 0.305881, 0.305881)),
 
            ColorSequenceKeypoint.new(1, Color3.new(1, 0.305881, 0.305881)),
 
        })
 
		--
 
game.Workspace.Eyes.Core.Ambience.PlaybackSpeed = 0.9

    end

end)
 
--

if game:GetService("ReplicatedStorage").GameData.Floor.Value == "Fools" then

game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
 
    wait(1)
 
    if game.Workspace:FindFirstChild("Eyes") then
 
game.Workspace.Eyes.Core.Attachment.EyesParticle.Color = ColorSequence.new({
 
            ColorSequenceKeypoint.new(0, Color3.new(1, 0.305881, 0.305881)),
 
            ColorSequenceKeypoint.new(0.305881, Color3.new(1, 0.305881, 0.305881)),
 
            ColorSequenceKeypoint.new(0.305881, Color3.new(1, 0.305881, 0.305881)),
 
            ColorSequenceKeypoint.new(1, Color3.new(1, 0.305881, 0.305881)),
 
        })
 
		--
 
game.Workspace.Eyes.Core.Ambience.PlaybackSpeed = 0.9

    end

end)
 
--

--[[ ]]--

end
 
end)()
 
--

-- door new materials

coroutine.wrap(function()

if game:GetService("ReplicatedStorage").GameData.Floor.Value == "Hotel" then

while true do

    wait(0.0005)

workspace.CurrentRooms[game.ReplicatedStorage.GameData.LatestRoom.Value]:FindFirstChild("Door"):FindFirstChild("Door").Material = "Brick"
workspace.CurrentRooms[game.ReplicatedStorage.GameData.LatestRoom.Value]:FindFirstChild("Door"):FindFirstChild("Door"):FindFirstChild("Sign").Material = "Rock"

    end

elseif game:GetService("ReplicatedStorage").GameData.Floor.Value == "Mines" then

--[[ new door material in the mines too ]]--

while true do

    wait(0.0005)

workspace.CurrentRooms[game.ReplicatedStorage.GameData.LatestRoom.Value]:FindFirstChild("Door"):FindFirstChild("Door"):FindFirstChild("Sign").Material = "Rock"

    end

elseif game:GetService("ReplicatedStorage").GameData.Floor.Value == "Backdoor" then

--[[ new door material in the backdoor too ]]--

while true do

    wait(0.0005)

workspace.CurrentRooms[game.ReplicatedStorage.GameData.LatestRoom.Value]:FindFirstChild("Door"):FindFirstChild("Door").Material = "Rock"

    end

elseif game:GetService("ReplicatedStorage").GameData.Floor.Value == "Fools" then

while true do

    wait(0.0005)

workspace.CurrentRooms[game.ReplicatedStorage.GameData.LatestRoom.Value]:FindFirstChild("Door"):FindFirstChild("Door").Material = "Brick"
workspace.CurrentRooms[game.ReplicatedStorage.GameData.LatestRoom.Value]:FindFirstChild("Door"):FindFirstChild("Door"):FindFirstChild("Sign").Material = "Rock"

    end

--[[ ]]--

end

end)()

--
